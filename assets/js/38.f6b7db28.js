(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{356:function(e,a,v){"use strict";v.r(a);var s=v(33),t=Object(s.a)({},(function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"模块成员导出详情"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模块成员导出详情"}},[e._v("#")]),e._v(" 模块成员导出详情")]),e._v(" "),v("h2",{attrs:{id:"前端模块化规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端模块化规范"}},[e._v("#")]),e._v(" 前端模块化规范")]),e._v(" "),v("div",{staticClass:"language-javascript extra-class"},[v("pre",{pre:!0,attrs:{class:"language-javascript"}},[v("code",[v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[e._v("AMD")]),e._v("   "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("  requirejs\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token constant"}},[e._v("CMD")]),e._v("   "),v("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("  seajs\n")])])]),v("h2",{attrs:{id:"服务器端的模块化规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#服务器端的模块化规范"}},[e._v("#")]),e._v(" 服务器端的模块化规范")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("CommonJS - Nodejs")])])]),e._v(" "),v("h2",{attrs:{id:"模块化相关的规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#模块化相关的规则"}},[e._v("#")]),e._v(" 模块化相关的规则")]),e._v(" "),v("ol",[v("li",[v("p",[e._v("如何定义模块： 一个js文件就是一个模块， 模块内部的成员都是相互独立的")])]),e._v(" "),v("li",[v("p",[e._v("模块成员的导出和引入 "),v("code",[e._v("require()")]),e._v(" "),v("code",[e._v("exports")]),e._v(" "),v("code",[e._v("module.expors")])])]),e._v(" "),v("li",[v("p",[e._v("如何 使用？")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("var res = require('xxx');")]),e._v(" 从某个文件导入，或者就是导入某个核心模块。")]),e._v(" "),v("li",[e._v("导出方法一："),v("code",[e._v("exports.xxx = xxxx")]),e._v("  可以使方法，变量等等。 "),v("code",[e._v("exports")]),e._v("默认为一个空对象，与对象的处理的方式相同\n"),v("ul",[v("li",[e._v("使用的时候如果解构这个导入的也是可以的 "),v("code",[e._v("let { res } = require('xxx');")])])])]),e._v(" "),v("li",[e._v("导出方法二："),v("code",[e._v("module.e xports = xxx")]),e._v(" "),v("ul",[v("li",[e._v("这个就不是对象了，所以不能够使用解构的方式去导入")])])])])]),e._v(" "),v("li",[v("p",[e._v("还有一种导出方式，global "),v("strong",[e._v("不建议使用")])]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("var flag = 13;")]),e._v(" "),v("code",[e._v("global.flag = flag")])])]),e._v(" "),v("li",[v("p",[e._v("然后去需要的地方导入全局对象就可以了")]),e._v(" "),v("p",[v("code",[e._v("require('global');")])]),e._v(" "),v("p",[v("code",[e._v("console.log(global.flag);")]),e._v("  就可以了")])])])])]),e._v(" "),v("h2",{attrs:{id:"注意"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[e._v("#")]),e._v(" 注意")]),e._v(" "),v("ol",[v("li",[e._v("已经加载的模块，会被缓存，相同的模块文件，只会被加载一次")]),e._v(" "),v("li",[e._v("如果在一个文件中，多次引入另外一个文件，另外一个文件只会被加载一次")]),e._v(" "),v("li",[e._v("引入文件  "),v("code",[e._v(".js")]),e._v(" 的你文件后缀是可以省略的  "),v("code",[e._v("require('./xxx');")])]),e._v(" "),v("li",[e._v("模块文件的后缀的3中情况  node 默认只识别这三种后缀结尾的文件，这也就是为什么"),v("code",[e._v("webpack")]),e._v("配置的时候需要去告诉node, 要去解析的文件名称的后缀\n"),v("ul",[v("li",[v("code",[e._v(".js")])]),e._v(" "),v("li",[v("code",[e._v(".json")])]),e._v(" "),v("li",[v("code",[e._v(".node")])])])])])])}),[],!1,null,null,null);a.default=t.exports}}]);