(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{348:function(t,l,v){"use strict";v.r(l);var _=v(33),T=Object(_.a)({},(function(){var t=this,l=t.$createElement,v=t._self._c||l;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"简单的http-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简单的http-协议"}},[t._v("#")]),t._v(" 简单的HTTP 协议")]),t._v(" "),v("ol",[v("li",[t._v("HTTP 协议是无状态协议")])]),t._v(" "),v("ul",[v("li",[t._v("HTTP协议自身不对请求和响应之间的通信状态进行保存，对于发送过的请求或响应都不做持久化处理。")]),t._v(" "),v("li",[t._v("但是，为了实现期望的保持状态功能，于是引入了Cookie技术，接口请求的时候，会自动带上Cookie")])]),t._v(" "),v("ol",{attrs:{start:"2"}},[v("li",[v("p",[t._v("持久连接-节省通信量")]),t._v(" "),v("ul",[v("li",[t._v("HTTP 协议，初始版本的时候，每一次HTTP请求的时候，都会进行TCP的三次握手和四次挥手。随着传送的信息量的越来越大，这种方式很影响通信情况")]),t._v(" "),v("li",[t._v("HTTP/1.0 （部分） 和 HTTP/1.1 提出了持久连接，成为HTTP keep-alive  只要任意一端没有明确的提出断开连接的要求，则保持TCP的连接状态")])])]),t._v(" "),v("li",[v("p",[t._v("管线化")]),t._v(" "),v("ul",[v("li",[t._v("持久连接使得多数的请求一管线化方式发送成为可能，从前发送请求之后，必须等前面一个请求响应了，才能做下一个请求的发送。也就是无法并发请求")])])]),t._v(" "),v("li",[v("p",[t._v("HTTP的缺点")]),t._v(" "),v("ul",[v("li",[t._v("通信使用明文（不加密），内容可能会被窃听")]),t._v(" "),v("li",[t._v("不验证通信方的身份，因此有可能，遭遇伪装")]),t._v(" "),v("li",[t._v("无法证明报文的完整性，所以有可能已遭篡改")])])]),t._v(" "),v("li",[v("p",[t._v("HTTPS")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("通过和SSL（Secure Socket Layer，安全套接层）或TLS（Transport  Layer Security, 安全层传输协议）组合使用，加密HTTP的通信内容")])]),t._v(" "),v("li",[v("p",[t._v("提供证书验证，由第三方机构颁发，用以证明服务器和客户端是实际存在的")])]),t._v(" "),v("li",[v("p",[t._v("一般HTTP 直接与TCP进行通信，HTTPS 中间加了一层，HTTP和SSL 通信，SSL和TCP进行通信")])])])])])])}),[],!1,null,null,null);l.default=T.exports}}]);