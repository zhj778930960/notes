(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{342:function(t,s,a){"use strict";a.r(s);var n=a(33),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"egg目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#egg目录结构"}},[t._v("#")]),t._v(" egg目录结构")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("目录结构介绍")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 项目名称\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" app\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" router"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   # 配置"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("路径\n     \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" controller  # 处理业务逻辑，处理后返回相应的结果\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   # 具体处理业务逻辑的js文件\n        \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" service     # 抽象层，像业务逻辑中公用的处理部分，可以抽离出来，或者封装，放置到这个文件夹去调用   可以将数据库获取数据的方法写入这里\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   # 具体的公用业务逻辑代码\n        \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" middeware   # 编写中间件\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   # 具体的中间件逻辑\n\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" schedule    # 定时任务\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js   # 具体定时任务代码逻辑\n        \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("      # 静态资源地址，像css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 图片，文档等都可以放置到这里\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("css   \n     \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" views       # 放置模板文件，由模板插件约定，什么格式的模板插件，就放置什么格式的文件\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tpl  # 模板文件\n        \n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" extend      # 扩展  可以分别对下面五个属性进行扩展，下面五个文件，就对应内置五个对象，启动时会与内置对象的prototype进行合并\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" helper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" context"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n        "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" application"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config        # 环境配置文件， 当前环境的不同，启动的时候，就会启动不同的文件\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" plugin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js              # 插件\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js      # 默认配置文件\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js         # 生产环境配置文件，当与默认配置属性相同时，会覆盖掉默认配置的属性\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js         # 测试环境配置文件，当与默认配置属性相同时，会覆盖掉默认配置的属性\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js        # 本地环境配置文件，当与默认配置属性相同时，会覆盖掉默认配置的属性\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unittest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js     # 单元测试环境配置文件，当与默认配置属性相同时，会覆盖掉默认配置的属性\n     \n   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" test         # 单元测试\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" middware\n     "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" controller \n")])])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);