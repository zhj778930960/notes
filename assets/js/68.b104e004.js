(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{565:function(t,a,s){"use strict";s.r(a);var e=s(2),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"先require导入核心模块-var-path-require-path"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先require导入核心模块-var-path-require-path"}},[t._v("#")]),t._v(" 先"),s("code",[t._v("require")]),t._v("导入核心模块  "),s("code",[t._v("var path = require('path');")])]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("basename")]),t._v("  用法 "),s("code",[t._v("path.basename('/xxx/xxx/xxx.xxxx')")]),t._v("获取路径的最后一部分，如果最后一部分还是一个路径 那就是最后一个文件夹的名字")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/a/b/c")]),t._v(" 得到的就会是"),s("code",[t._v("c")]),t._v("这个目录名")]),t._v(" "),s("li",[s("code",[t._v("/a/b/c/d.txt")]),t._v("就回得到的是"),s("code",[t._v("d.txt")]),t._v("这个文件的全名加后缀")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("dirname")]),t._v("用法 "),s("code",[t._v("path.dirname('/xxx/xxx.xxxx')")]),t._v("获取路径，无论最后一个是文件还是目录，得到的都只有前面几部分的目录路径")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/a/b/c")]),t._v("得到的就是 "),s("code",[t._v("/a/b")])]),t._v(" "),s("li",[s("code",[t._v("/a/b/c/d.html")]),t._v("得到的就是"),s("code",[t._v("/a/b/c")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("extname")]),t._v("用法"),s("code",[t._v("path.extname('/xxx.xxxx')")]),t._v("获取文件的扩展名")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("/a/v/c.js")]),t._v(" 得到的就是"),s("code",[t._v(".js")]),t._v("这个扩展名称 如果有扩展名，就会返回扩展名")]),t._v(" "),s("li",[t._v("如果没有扩展名就会返回空， "),s("code",[t._v("/a/v/c")]),t._v("就会返回一个空值，其实就是是没有找到扩展名")]),t._v(" "),s("li",[s("code",[t._v(".txt")]),t._v("这种形式得到的扩展名也会是空字符串")])])]),t._v(" "),s("li",[s("p",[t._v("路径的格式化处理"),s("code",[t._v("format()")]),t._v("和"),s("code",[t._v("parse()")]),t._v("，我们先看"),s("code",[t._v("parse()")]),t._v("方法")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("path()")]),t._v("是将路径或者路径+名称，转换为对象的形式")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用方式"),s("code",[t._v("path.parse('/a/b/c.js')")]),t._v("得到的将是")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{  \n   \"root\": '/',   根路径\n   \"dir\": '/a/b',   目录路径 除了最后一级\n   \"base\": 'c.js',  最后一级的路径名或者  文件名+扩展名\n   \"ext\": '.js',  扩展名\n   \"name\": 'c'  文件名或者路径名\n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("format()")]),t._v("是将对象转为字符串  与"),s("code",[t._v("js")]),t._v("中的"),s("code",[t._v("stringify()")]),t._v("相似，就是将上述的对象重新转换为字符串路径")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("path.format(")]),t._v("{  "),s("code",[t._v("\"root\": '/',")]),t._v(" "),s("code",[t._v("dir: '/a/b',")]),t._v(" "),s("code",[t._v("\"base\": 'c.js',")]),t._v(" "),s("code",[t._v("\"ext\": '.js',")]),t._v(" "),s("code",[t._v("\"name\": 'c'")]),t._v(" }"),s("code",[t._v(")")]),t._v("得到的就是"),s("code",[t._v("/a/b/c.js")]),t._v("这个路径字符串")])])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("isAbsolute()")]),t._v(" 判断是不是绝对路径， 在"),s("code",[t._v("windows")]),t._v("下 判断是不是绝对路径，就是判断路径的最开始前面是不是一个盘符 例如 "),s("code",[t._v("C:")])])])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("path.isAbsolute('C://a/b/c')")]),t._v("这就是一个绝对路径，返回为"),s("code",[t._v("true")])])]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[s("p",[t._v("拼接路径 "),s("code",[t._v("join()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("path.join('a', 'b/c', 'd')")]),t._v("会得到一个"),s("code",[t._v("/a/b/c/d")]),t._v("的路径字符串")]),t._v(" "),s("li",[t._v("当然其中还有一些特殊的字符，会被识别到\n"),s("ul",[s("li",[s("code",[t._v("..")]),t._v("在"),s("code",[t._v("join()")]),t._v("中，被当做返回上一层的操作，所以"),s("code",[t._v("path.join('a', 'b/c', '..', 'd');")]),t._v("你就会得到"),s("code",[t._v("a/b/d")]),t._v("这么一个路径字符串")]),t._v(" "),s("li",[s("code",[t._v(".")]),t._v("在"),s("code",[t._v("join()")]),t._v("中指的是当前路径")])])])])]),t._v(" "),s("li",[s("p",[t._v("将路径规范化"),s("code",[t._v("normalize()")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("path.normalize('/a/b/c/d/..');")]),t._v("将转换为"),s("code",[t._v("/a/b/c")])]),t._v(" "),s("li",[s("code",[t._v("path.normalize('C://a/b///d');")]),t._v("将转换为"),s("code",[t._v("C:/a/b/c")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("relative()")]),t._v("查找某个路径 到另一个路径下，需要怎么走的路径字符串 例如 "),s("code",[t._v("/a/b/c")]),t._v(" 去 "),s("code",[t._v("/a/d/e")]),t._v(" 就需要"),s("code",[t._v("../../d/e")]),t._v(" 相对路径")])])]),t._v(" "),s("ul",[s("li",[t._v("用法"),s("code",[t._v("path.relative('/a/b/c', '/a/d/e');")]),t._v(" 就会得到"),s("code",[t._v("../../d/e")])])]),t._v(" "),s("ol",{attrs:{start:"9"}},[s("li"),t._v(" "),s("li",[s("p",[s("code",[t._v("resolve([forms..], to)")]),t._v("解析路径 "),s("code",[t._v("forms")]),t._v("为多个，"),s("code",[t._v("to")]),t._v("为")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("to")]),t._v("如果带"),s("code",[t._v("/")]),t._v("开头，那么就是一个绝对路径，直接返回"),s("code",[t._v("to")]),t._v("这个字符串路径。")])]),t._v(" "),s("li",[s("p",[t._v("如果不是会有下面几种情况 "),s("code",[t._v(".")]),t._v("代表当前路径")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myPath2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./img/so'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myPath3"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo/bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./baz'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myPath4"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/foo/bar'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/tmp/file/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPath2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPath3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPath4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])])])]),t._v(" "),s("li",[s("p",[t._v("两个特殊的属性")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("delimiter")]),t._v(" 不是方法 用法是"),s("code",[t._v("path.delimiter")]),t._v("表示 路径分隔符")]),t._v(" "),s("ul",[s("li",[t._v("在"),s("code",[t._v("windows")]),t._v("上是分号"),s("code",[t._v(";")]),t._v("在"),s("code",[t._v("Linux")]),t._v("上是冒号"),s("code",[t._v(":")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("sep")]),t._v("不是方法， 用法是"),s("code",[t._v("path.set")]),t._v(" 表示环境变量分隔符")]),t._v(" "),s("ul",[s("li",[t._v("在"),s("code",[t._v("windows")]),t._v("上是"),s("code",[t._v("\\")]),t._v("       在"),s("code",[t._v("Linux")]),t._v("上是"),s("code",[t._v("/")])])])])])])])])}),[],!1,null,null,null);a.default=v.exports}}]);