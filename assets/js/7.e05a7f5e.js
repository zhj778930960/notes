(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{327:function(t,e,l){t.exports=l.p+"assets/img/2019-07-24-060214.9dfe5243.png"},408:function(t,e,l){"use strict";l.r(e);var s=l(33),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js的数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js的数据结构"}},[t._v("#")]),t._v(" JS的数据结构")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("栈： 先进后出，进口和出口都是同一个。")])]),t._v(" "),s("li",[s("p",[t._v("堆： 堆数据结构是一种树状结构。它的存取数据的方式与书架和书非常相似。我们只需要知道书的名字就可以直接取出书了，并不需要把上面的书取出来。JSON格式的数据中，我们存储的"),s("code",[t._v("key-value")]),t._v("可以是无序的，因为顺序的不同并不影响我们的使用，我们只需要关心书的名字。")])]),t._v(" "),s("li",[s("p",[t._v("队列： 先进先出，一个入口，一个出口")])]),t._v(" "),s("li",[s("p",[t._v("变量的存放")]),t._v(" "),s("ul",[s("li",[t._v("基本类型： 存在于栈中，因为这些类型在内存中，有固定的大小，通过按值来访问。类型有： string, boolean, number, null, undefined, symbol 6种")]),t._v(" "),s("li",[t._v("引用类型： 存在于堆中，无固定大小。其实在栈中，会保存引用类型的访问地址，但是实际的数据还是存放在堆中，类型： object。\n"),s("ul",[s("li",[t._v("当需要访问引用类型的时候，先去访问栈中的内存地址，然后根据地址去堆中找到对应的值。")])])])])])]),t._v(" "),s("p",[s("img",{attrs:{src:l(327),alt:""}})])])}),[],!1,null,null,null);e.default=n.exports}}]);