(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{356:function(t,s,a){"use strict";a.r(s);var v=a(33),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"异步i-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步i-o"}},[t._v("#")]),t._v(" 异步I/O")]),t._v(" "),a("h4",{attrs:{id:"异步i-o-指的是就是input输入和output输出-主要有两个操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步i-o-指的是就是input输入和output输出-主要有两个操作"}},[t._v("#")]),t._v(" 异步"),a("code",[t._v("I/O")]),t._v(" 指的是就是"),a("code",[t._v("Input")]),t._v("输入和"),a("code",[t._v("output")]),t._v("输出, 主要有两个操作")]),t._v(" "),a("ol",[a("li",[t._v("文件操作, 一般就是读写操作。")]),t._v(" "),a("li",[t._v("网络操作， 一般就是请求响应的处理。")])]),t._v(" "),a("h4",{attrs:{id:"浏览器中也存在异步操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中也存在异步操作"}},[t._v("#")]),t._v(" 浏览器中也存在异步操作")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("定时任务")])]),t._v(" "),a("li",[a("p",[t._v("事件处理")])]),t._v(" "),a("li",[a("p",[t._v("Ajax回调处理")])])]),t._v(" "),a("h4",{attrs:{id:"js的运行是单线程的，-所以引入了事件队列。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js的运行是单线程的，-所以引入了事件队列。"}},[t._v("#")]),t._v(" JS的运行是单线程的， 所以引入了事件队列。")]),t._v(" "),a("ol",[a("li",[t._v("所有的同步任务都在主线程上执行，形成了一个  "),a("strong",[t._v("执行栈")]),t._v("。")]),t._v(" "),a("li",[t._v("除了主线程之外。还存在一个"),a("strong",[t._v("任务队列")]),t._v("（先进先出）， 所有的异步任务都在这个执行队列中")]),t._v(" "),a("li",[t._v("当执行栈之中的任务执行完成，会将任务队列的中的异步任务，放入执行栈，然后开始执行。")]),t._v(" "),a("li",[t._v("主线程不停地在重复上面的第3个步骤。")])]),t._v(" "),a("h4",{attrs:{id:"同理，-node-js与js的事件模型是相似的，-单线程-事件队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同理，-node-js与js的事件模型是相似的，-单线程-事件队列"}},[t._v("#")]),t._v(" 同理， Node.js与JS的事件模型是相似的， 单线程 + 事件队列")]),t._v(" "),a("h4",{attrs:{id:"node-js中异步执行的任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js中异步执行的任务"}},[t._v("#")]),t._v(" Node.js中异步执行的任务")]),t._v(" "),a("ol",[a("li",[t._v("文件"),a("code",[t._v("I/O")])]),t._v(" "),a("li",[t._v("网络"),a("code",[t._v("I/O")])])]),t._v(" "),a("h4",{attrs:{id:"基于回调函数的编码风格"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于回调函数的编码风格"}},[t._v("#")]),t._v(" 基于回调函数的编码风格")])])}),[],!1,null,null,null);s.default=_.exports}}]);