(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{527:function(s,a,t){"use strict";t.r(a);var n=t(4),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ol",[t("li",[t("code",[s._v("redis")]),s._v("是什么？")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("redis")]),s._v("是一个免费开源，基于内存的高性能key-value数据库")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[t("code",[s._v("redis")]),s._v("能做什么？")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("redis")]),s._v("应用很广泛，"),t("code",[s._v("redis")]),s._v("具有速度快，数据持久化，丰富的数据类型，多语言支持，和多功能等特性。")]),s._v(" "),t("li",[s._v("速度快：10W的OPS速度（读写速度）。")]),s._v(" "),t("li",[s._v("持久化："),t("code",[s._v("redis")]),s._v("是基于内存模型，可以解决断电或者重启造成的数据丢失，"),t("code",[s._v("redis")]),s._v("采取了两种数据持久化的策略，分别为RDB和AOF，会将"),t("code",[s._v("redis")]),s._v("在内存中保存的数据异步更新到磁盘中，实现数据的持久化功能。")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("redis")]),s._v("的安装，在windows 电脑安装redis")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("进入github项目下载.zip 安装包  https://github.com/microsoftarchive/redis/releases")])]),s._v(" "),t("li",[t("p",[s._v("选择一个版本进入，下载   Redis-x64-版本号.zip 压缩包")])]),s._v(" "),t("li",[t("p",[s._v("下载下来后，解压压缩包")])]),s._v(" "),t("li",[t("p",[s._v("在解压的文件夹里面 打开**cmd **界面，进入到解压的文件夹爱里面， 输入 redis-server.exe redis.windows.conf  然后运行，")]),s._v(" "),t("p",[s._v("将解压的文件夹爱配置到系统环境变量PATH里面，就可以只用输入 redis-server.exe  开启数据库")])]),s._v(" "),t("li",[t("p",[s._v("访问数据库，依然在这个目录下，新打开一个cmd界面，输入 redis-cli.exe    默认为当前IP和port")]),s._v(" "),t("p",[s._v("连接特定IP和服务器  "),t("code",[s._v("redis-cli.exe -h ip地址 -p 端口号")])])]),s._v(" "),t("li",[t("p",[s._v("有个问题  在启动数据库之后，代码连接的时候，无法连接的问题，这个问题是因为redis 是处于保护模式下，只接受来自环回接口的连接，不允许通过外部计算机连接到本机的redis。  有四种方式解除保护模式：")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("redis-cli 在终端上连接上数据库后 输入  config set protected-mode no  这样重启数据库后会失效")])]),s._v(" "),t("li",[t("p",[s._v("更改 redis.conf 。将 protected-mode yes  改为 protected-mode no.")])])]),s._v(" "),t("p",[s._v("​           3.redis-cli.exe -h 192.168.0.8 -p 6379 --protected mode no")]),s._v(" "),t("p",[s._v("​           4.设置绑定地址或身份验证密码。（这个我没有测试）")])])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("redis")]),s._v("数据类型")])])]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[s._v("redis "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("支持五种数据格式，string")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字符串"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("， "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("哈希值， 主要用于存储对象"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("， "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("list")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("列表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("， "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("set")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("无序集合，存储的值都是独一无二的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("， "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("zset")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("有序集合，存储的值也是独一无二的"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" string 数据类型   因为redis 是key"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("value 类型的数据库，所以操作起来类似于操作缓存\n   \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置/获取 删除单个值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" key值  value值   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"123"')]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置key  和 value")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" key值            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("get")]),s._v(" name           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取值")]),s._v("\n    del key值            "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("      del name           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 删除值")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//设置/获取  多个值")]),s._v("\n    mset key1 value1 key2 value2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mset name 张三 age "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v("\n    mget key1 key2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mget name age\n    mget key1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mget name\n    \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" hash 哈希数据类型\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置哈希值  一次设置一个属性和值")]),s._v("\n  hset 对象名  key值  value 值  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("   hset runoob name "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置哈希值 其实就是一个对象  多个属性同时设置  ")]),s._v("\n        runoob：  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n              field1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n              field2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    hmset 对象名   key值  value值  key值  value值 \n        "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" \n    hmset runoob field1 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),s._v(" field2 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"World"')]),s._v("\n    \n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取哈希值  ")]),s._v("\n    hget  runoob field1  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//一个一个获取")]),s._v("\n    hget  runoob field2\n    \n    hmget runoob filed1 filed2  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以同时获取多个")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取所有的key 和 value")]),s._v("\n    hgetall runoob   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//能拿到所有的key和value  ")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取所有的key")]),s._v("\n    hkeys runoob\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取所有的值")]),s._v("\n    hvals runoob\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除其中一个属性和值")]),s._v("\n    hdel runoob field1\n    \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" list 列表数据类型 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 数组 用来存储字符串元素的集合\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从数组左边插入值  循环执行unshift方法")]),s._v("\n    lpush key  value1  value2  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  lpush arr a1 a2 a3\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从数组左边截取一个值，原list 则就少一个值")]),s._v("\n    lpop key  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    lpop arr\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从数组右边插入值  循环执行push方法")]),s._v("\n    rpush key value1 value2 value3  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  rpush arr b1 b2 b3\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从数组右边截取一个值，原list就少一个值")]),s._v("\n    rpop key   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  rpop arr\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从原数组某个值的前或者后插入一个值")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在arr 数组的 第一个1这个值之前的位置插入一个 值为12")]),s._v("\n    linsert key before value  field  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  linsert arr before "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  \n\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在arr 数组的 第一个2这个值之后的位置插入一个 值为4545")]),s._v("\n    linsert key after value  field  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  linsert arr after "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  \n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指定下标，获取指定下表之前的值 原数组不变")]),s._v("\n    lrange key index1  index2  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  lrange arr "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取下标为0 和 10 之间的值")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//截取指定下表之前的值，原数组改变")]),s._v("\n    ltrim key  index1 index2  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  ltrim arr "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//截取下表为0 和 3的值 ， 将原数组的值改变未截取的值")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//改变数组指定下标的值")]),s._v("\n    lset key  index value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  lset arr "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2222")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将下标为1的位置的值改为2222")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取列表的长度")]),s._v("\n    llen key   "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("   llen arr  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取arr这个list 长度")]),s._v("\n    \n    \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 无序集合"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" 无顺序  可以存储多个字符串元素，和列表不同，集合元素不允许重复，且不能拿索引下标来设置和获取\n      \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置集合，给集合中添加数据，重复的不会继续添加")]),s._v("\n    sadd key value1 value2    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  sadd set1 v1 v2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// value 如果重复，则只会添加一次")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除集合中的元素")]),s._v("\n    srem key value1 value2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  srem set2 v1 v2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除set2集合中 数据v1 和数据v2")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//计算集合中的元素个数")]),s._v("\n    scard key  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("   scard set2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//计算集合set2中的数据总个数")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查看集合中存在某个数据吗 如果存在则返回1  如果不存在就返回2")]),s._v("\n    sismember key  value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  sismember set1 v2   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//有v2就返回1 没有就返回0")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从集合中随机返回指定个数的数据")]),s._v("\n    srandmember key count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("   srandmember set1 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//随机返回两个集合数据")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查询集合中所有的数据，慎用，因为O(n)的时间复杂度，集合数据越多，时间就越长")]),s._v("\n    smembers key  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("    smembers set1 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取set1集合内的所有数据")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求集合之间的交集，可以是多个")]),s._v("\n    sinter key1  key2  key3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   sinter set1 set2 set3 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求三个集合之间的交集")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求集合之间的并集，可以是多个")]),s._v("\n    sunion key1  key2  key3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   sunion set1 set2 set3 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求三个集合之间的并集")]),s._v("\n    \n     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求集合之间的差集，可以是多个")]),s._v("\n    sinter key1  key2  key3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   sdiff set1 set2 set3 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//求三个集合之间的差集")]),s._v("\n    \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" 有序集合zset 集合元素不能重复，但是可以排序，不是利用下标，是有序集合给每个元素设置一个分值score 作为排序的依据\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 增加集合成员 nx 代表新增")]),s._v("\n    zadd key nx score1 value1  score2 value2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" zadd hero nx "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v(" zhangjie "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" yezi\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 更新集合成员的分数，xx 代表更新")]),s._v("\n    zadd key xx newscore value1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  zadd hero xx "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" zhangjie\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查询集合成员的分数")]),s._v("\n    zscore key value1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v("  zscore hero zhangjie\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//增加集合成员的分数 在原先的分数上增加")]),s._v("\n    zincrby key addscore value1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" zincrby hero "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" zhangjie  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//此时就是100 + 4")]),s._v("\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除指定成员")]),s._v("\n    zrem key value1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  zrem hero zhangjie  \n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查看成员排名 由低到高")]),s._v("\n    zrank key value1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  zrank hero zhangjie\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查看成员排名 由高到低")]),s._v("\n    zrevrank key value1  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" zrevrank hero zhangjie\n    \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//返回指定分数区间内的数据value")]),s._v("\n    zrange key scorestart  scoreend  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  zrange hero "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v("\n   \n  \n    \n    \n    \n    \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br"),t("span",{staticClass:"line-number"},[s._v("94")]),t("br"),t("span",{staticClass:"line-number"},[s._v("95")]),t("br"),t("span",{staticClass:"line-number"},[s._v("96")]),t("br"),t("span",{staticClass:"line-number"},[s._v("97")]),t("br"),t("span",{staticClass:"line-number"},[s._v("98")]),t("br"),t("span",{staticClass:"line-number"},[s._v("99")]),t("br"),t("span",{staticClass:"line-number"},[s._v("100")]),t("br"),t("span",{staticClass:"line-number"},[s._v("101")]),t("br"),t("span",{staticClass:"line-number"},[s._v("102")]),t("br"),t("span",{staticClass:"line-number"},[s._v("103")]),t("br"),t("span",{staticClass:"line-number"},[s._v("104")]),t("br"),t("span",{staticClass:"line-number"},[s._v("105")]),t("br"),t("span",{staticClass:"line-number"},[s._v("106")]),t("br"),t("span",{staticClass:"line-number"},[s._v("107")]),t("br"),t("span",{staticClass:"line-number"},[s._v("108")]),t("br"),t("span",{staticClass:"line-number"},[s._v("109")]),t("br"),t("span",{staticClass:"line-number"},[s._v("110")]),t("br"),t("span",{staticClass:"line-number"},[s._v("111")]),t("br"),t("span",{staticClass:"line-number"},[s._v("112")]),t("br"),t("span",{staticClass:"line-number"},[s._v("113")]),t("br"),t("span",{staticClass:"line-number"},[s._v("114")]),t("br"),t("span",{staticClass:"line-number"},[s._v("115")]),t("br"),t("span",{staticClass:"line-number"},[s._v("116")]),t("br"),t("span",{staticClass:"line-number"},[s._v("117")]),t("br"),t("span",{staticClass:"line-number"},[s._v("118")]),t("br"),t("span",{staticClass:"line-number"},[s._v("119")]),t("br"),t("span",{staticClass:"line-number"},[s._v("120")]),t("br"),t("span",{staticClass:"line-number"},[s._v("121")]),t("br"),t("span",{staticClass:"line-number"},[s._v("122")]),t("br"),t("span",{staticClass:"line-number"},[s._v("123")]),t("br"),t("span",{staticClass:"line-number"},[s._v("124")]),t("br"),t("span",{staticClass:"line-number"},[s._v("125")]),t("br"),t("span",{staticClass:"line-number"},[s._v("126")]),t("br"),t("span",{staticClass:"line-number"},[s._v("127")]),t("br"),t("span",{staticClass:"line-number"},[s._v("128")]),t("br"),t("span",{staticClass:"line-number"},[s._v("129")]),t("br"),t("span",{staticClass:"line-number"},[s._v("130")]),t("br"),t("span",{staticClass:"line-number"},[s._v("131")]),t("br"),t("span",{staticClass:"line-number"},[s._v("132")]),t("br"),t("span",{staticClass:"line-number"},[s._v("133")]),t("br"),t("span",{staticClass:"line-number"},[s._v("134")]),t("br"),t("span",{staticClass:"line-number"},[s._v("135")]),t("br"),t("span",{staticClass:"line-number"},[s._v("136")]),t("br"),t("span",{staticClass:"line-number"},[s._v("137")]),t("br"),t("span",{staticClass:"line-number"},[s._v("138")]),t("br"),t("span",{staticClass:"line-number"},[s._v("139")]),t("br"),t("span",{staticClass:"line-number"},[s._v("140")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);