(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{367:function(s,t,a){"use strict";a.r(t);var n=a(33),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-主要应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-主要应用"}},[s._v("#")]),s._v(" "),a("code",[s._v("Nginx")]),s._v(" 主要应用")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("主要应用的场景")]),s._v(" "),a("ul",[a("li",[s._v("静态网站")]),s._v(" "),a("li",[s._v("负载均衡")]),s._v(" "),a("li",[s._v("静态代理")]),s._v(" "),a("li",[s._v("动静分离")]),s._v(" "),a("li",[s._v("虚拟主机")]),s._v(" "),a("li",[s._v("高可用")])])]),s._v(" "),a("li",[a("p",[s._v("如何配置静态网站？")])])]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 可以自己先写一个静态的界面，或者网上下载一个ace admin 这么一个静态网站的代码下来也是可以的\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 配置nginx conf 中的 nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 文件中的 server 配置 \n\n 配置静态网站 主要就是location 里面要找到对应的index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html 启动界面就可以了\n\n   # location 是用于匹配路由的，这里的意思就是匹配 为 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 的路由， 因为你访问localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" 的时候就会默认访问带 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 的路由\n        # localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" 就是 localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 的缩写显示\n        # 这里就是匹配到 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 路由 然后做一个界面的展示  跟前端路的意思差不多\n        location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            # 这里的root 就相当于 ip "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" port localhost"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ip "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" port\n            root  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("E")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\\ace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # root 是配置服务器的默认网站根目录位置，默认为nginx安装主目录下的html目录， 实际中我们要定位到项目的html目录中 例如打包好的dist目录中\n            index  index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置首页文件的名称 可省略 会自动去寻找文件夹下的index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[s._v("如何配置负载均衡？")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v(" 主要就是走http协议访问的负载均衡\n \n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 什么是负载均衡？？？\n   在网站创立的初期，我们一般都使用单台机器对外提供集中式服务；\n   但是随着业务量的增大，我们一台服务器不够用，这个时候，我们就会把多台服务器组成一个集群对外提供服务；\n   但是，我们网站对外提供的访问入口通常只有一个，比如www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz\n   那么当用户在浏览器输入上面的这个网址的时候，如何将用户的请求分发到集群中不同的机器上呢？？，这就是负载均衡需要做的事情\n   负载均衡通常是指将请求“均匀”分摊到集群的多个服务器节点上执行，这里的均匀是指在一个比较大的统计范围内基本是均匀的，并不是完全均匀。\n   \n   举例： 餐馆，原来只有一个厨师，没有服务员，当我们顾客去饭店点餐时，直接给厨师说就好了。\n   但是随着，客户的越来越多，一个厨师忙不过来了，就多增加了几个厨师，但是每个厨师的工作量又可能多少不均匀，有的厨师忙一天，有的厨师都没活，而且客户也不需要每个厨师都打招呼，进行访问。\n   这个时候，我们就加入了一个服务员，从中进行调配，尽量使得每个厨师都有活干，也尽量使每个人的活的多少都是差不多的。\n   这个服务员，也就是我们要学的nginx的负载均衡，客户不用直接面对那么多厨师，直接面对服务员就可以了\n   \n   \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 负载均衡的实现方式？？  \n     \n     硬件负载均衡：\n         "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("F5")]),s._v("，深信服，Array等\n            优点： 有厂商专业的技术服务团队提供支持，性能稳定；\n            缺点： 价格昂贵，对于较小的网络应用成本太高；\n     软件负载均衡： \n         nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LVS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" HAProxy等\n            优点： 免费开源，成本低廉\n            \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 如何配置？？？？？？\n  \n    两步即可：\n      # 在conf 文件夹下 的ngxin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 文件中 的 http 配置中加入如下配置 不是在server下\n      # 可以配置在 gzip  后面 server 之前\n      \n     第一步       \n      # 有几个服务器就可以加几个 server ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("port 权重； 这种配置\n       upstream  名称  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            server ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("port 权重"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            server ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("port 权重"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("    \n     # 一般 名称可以随便起，只要是字符串就可以，一般我们使用的时候都是配成 域名 例如www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz\n     \n     # 权重 怎么配置 weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" 这种方式进行配置。 用于后端服务器性能不均的情况，访问比率约等于权重之比，权重越大，访问的机会就越多\n     \n     # upstream 是配置nginx 与后端服务器负载均衡非常重要的模块，并且它还能对后端的服务器的健康状态进行检查，若后端服务器的一台发生故障，则前端的请求不会转发到该故障的机器上\n     \n      # 配置负载均衡 权重策略\n\n        upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     \n     第二步：\n        # 做一个代理转发。 和静态界面那个一样，不过我们需要是做一个转发，将地址转发到要访问的界面\n        # 这个是要配置到server 下\n        location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            # proxy_paxx 后面跟的地址要和  upstream 后面跟的名称要是一样的\n            # 例如： upstream abcde   那么 proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("abcde\n             proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com  \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n     \n            \n  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 常用的负载均衡策略\n  \n       轮询（默认）"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" # 不做任何配置，默认就是轮询策略。每个请求轮流分配到不同到的后端服务器，如果后端服务器down掉， 将自动剔除。\n        upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   \n       权重：# weight\n        upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   \n       ip_hash"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" # ip绑定策略， 每个请求安访问ip的hash值分配， 这样每个访问客户端会固定访问一个后端服务器， 可以解决会话session丢失的问题。\n       # 也就是说，固定ip 访问固定的后端服务器\n       # "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("hash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" 服务器个数 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" 取余 \n       # 用余数来判断，这个ip 固定访问那个服务器\n         upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             ip_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n        最少连接：# least_conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" web请求会被转发到连接数最少的服务器上\n        upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n             least_conn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n             server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" 负载均衡的其他几个配置\n    ①：# backup 备份， 只有当其他机器都关闭的时候，才会访问这个备份的服务器\n     upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),s._v(" backup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    ②：# down 表示关闭，当前的服务器是down状态，不参与负载均衡  这个不是说是这个机器坏掉了，只是表示这个服务器是down状态，也是正常运行的状态，只是就不参与负载均衡了\n     upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),s._v(" down"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n")])])])]),s._v(" "),a("li",[a("p",[s._v("静态代理")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 什么是静态处理？？\n  把所有静态资源的访问，原先是去访问服务器，现在改为访问nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  因为nginx更擅长于静态资源的处理，性能更好，效率更高\n  所以在实际项目中，我们把静态资源，比如图片，css"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("js 等交给nginx处理，而不是交由服务器处理\n  # 就是将静态资源放置到nginx 下，\n  \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 如何实现静态代理？？\n   # 通过在nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf文件  server下进行配置即可\n   \n   方式一： # 配置 location 基于文件的后缀进行匹配\n   \n     location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("js"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("css"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("gif"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jpg"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("png"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("jpeg"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("rar"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("zip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("txt"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("mid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("doc"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("docx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("pdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          root "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("E")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\\"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      #  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" 代表 正则匹配，即"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("后面的内容可以使正则表达式\n      #  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 第一个 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 表示任意字符\n      #  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" 表示一个或者多个字符\n      #  \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" 表示转义字符，是后面这个点的转义字符\n      #  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 表示或者\n      #  $ 表示结尾\n    整体表示就 任意字符开头， 以后面后缀结尾的文件，都去下面的这个地址进行获取和访问\n\n          \n    方式二： # 还是location  但是这次是基于访问路由进行的匹配 \n           # xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ccs  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("js  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("img xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("images\n    \n       location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("css"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("js"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("img"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n           root "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("E")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\\"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n         \n          \n      \n")])])])]),s._v(" "),a("li",[a("p",[s._v("动静分离（重点）")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v("  什么是动静分离？？？\n    # 就是负载均衡 和 静态代理 结合在一起\n    动态资源： 如jsp， 接口数据 由服务器或其他web服务器完成\n    静态资源： 如图片， js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" css， 前端代码 由nginx服务器完成\n    \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 如何进行动静分离配置？？\n    \n   #  我们将静态文件放置到nginx上"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 将nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 文件复制多份，起不同名字 所以我们可以配置多个静态资源服务器，然后在配置一个负载均衡服务器\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("  nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf  负载均衡\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("  nginx81"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf  静态资源\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("  nginx82"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf  静态资源\n   \n   # 即： 后端服务器 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" nginx服务器 （多个静态服务器 和 一个负载均衡）\n   \n   # 启动的时候 就要根据不同的"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 文件 单独去启动\n   \n   \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" 如何配置负载均衡？？？\n   \n    动态资源的负载均衡\n      \n    # 配置负载均衡 权重策略\n\n    upstream www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9555")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9554")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9553")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    静态资源的负载均衡\n   \n    # 配置负载均衡\n\n    upstream "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("81")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n         server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("82")]),s._v(" weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\n    ### 配置路由拦截\n    \n    动态负载均衡路由拦截\n     location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xiangdeyizhang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("xyz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    静态负载均衡路由拦截\n    \n    # 配置静态代理  匹配路由是否包含某个片段  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("ccs  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("js  xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("img xxx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("images\n     location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("css"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("js"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("img"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("images"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n\n\n")])])])]),s._v(" "),a("li",[a("p",[s._v("虚拟主机 （用的不是特别多）")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 什么是虚拟主机？？\n   # 就是把一台物理服务器划分成多个 “虚拟” 的服务器， 这样一台物理服务器就可以当做多个服务器来使用，从而可以配置多个网站\n   \n   # nginx 提供虚拟主机的功能，就是为了让我们不需要安装多个nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 就可以运行多个网站\n   \n   # nginx下 nginx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("conf 中一个 server标签 就是一个虚拟主机\n   \n   # 其实就是每个server都有一个listen 端口，来区分不同的网站， 还有就是server_name 域名不同\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 如何配置虚拟主机？？\n    方式一： # 基于域名的虚拟主机  端口号相同，域名不同\n      server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gogle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    方式二： # 基于端口的虚拟主机  端口号不同，域名相同\n      server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    方式三： # 端口号  和 域名  都不一样\n     \n    server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gogle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n      server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  # 配置监听端口号  范围为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n        server_name  www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("baidu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" # 配置服务名  localhost 表示任何ip都是可以进行访问的\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    \n")])])])]),s._v(" "),a("li",[a("p",[s._v("高可用")]),s._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" 什么是高可用？？\n   当我有一个nginx 反向代理进行转发，但是nginx宕机了怎么办？？\n   那nginx 就不能转发了\n   \n   高可用就是，有多个nginx 反向代理服务器， 其中一个宕机了，会立马切换到另外一个nginx 反向代理服务器\n   \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" 怎么配置呢？？\n    \n    准备工作：\n      （"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("） 需要两台服务器 例如： "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".137")]),s._v(" 和 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".150")]),s._v("\n      （"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("） 两台服务器都需要安装nginx\n      （"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("） 两台服务器都需要安装keepalived   \n")])])])])])])}),[],!1,null,null,null);t.default=r.exports}}]);